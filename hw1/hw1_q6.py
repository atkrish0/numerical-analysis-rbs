# -*- coding: utf-8 -*-
"""q6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LR84BomWD_2WcjNDOGVfv6sFB7tAShpY
"""

import numpy as np
import matplotlib.pyplot as plt

"""6.i"""

a = 5
c = 1
m = 2**3

a = (2**16)+3
c = 12345
m = (2**31)-1

Z_0 = 0
n = 90

Z = np.zeros(n)
Z[0] = Z_0

for i in range(1,n):
    Z[i] = (a * Z[i-1] + c) % m

U = Z/m
i = np.arange(1,n+1)

plt.scatter(i[:30], U[:30], color = 'red', label = 'first 30')
plt.scatter(i[30:60], U[30:60], color = 'green', label = 'mid 30')
plt.scatter(i[60:], U[60:], color = 'blue', label = 'last 30')
plt.xlabel('i')
plt.ylabel('Z_i')
plt.legend()
plt.show()

"""6.ii"""

from scipy.stats import qmc

sobol_gen = qmc.Sobol(d=2)
sobol_points = sobol_gen.random_base2(m=8)
sobol_points = sobol_points[:150]

plt.scatter(sobol_points[:,0], sobol_points[:,1], color='brown', label='sobol points')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()

random_points = np.random.rand(150,2)

plt.scatter(random_points[:,0], random_points[:,1], color='orange', label='random points')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()

"""6.iii"""

# first integral
n = 1000000

x = np.random.uniform(0, 1, n)
function_values = np.exp(np.exp(x))

I = np.mean(function_values)
print(I)

# second integral
n = 1000000
L = 1000

x = np.random.uniform(0, L, n)
f = x * (1 + x**2)**(-2)

I = np.mean(f) * L
print(I)

# third integral
n = 10000
s = 0

for i in range(n):
    x = np.random.uniform(-2, 2)
    y = np.random.uniform(0, 1)
    t = (x + 2) / 4
    f = 4 * np.exp((4 * t - 2 + y) ** 2)
    s += f

I = s / n
print(I)

n = 10000
Z = np.zeros(n)

for i in range(n):
    x = np.random.rand()
    y = np.random.rand() * x
    t = 1 / (1 + x)
    s = y / x
    f = np.exp(-(1/t - 1) * (1 + s)) * (1 / t**2) * abs(1 / t-1)
    Z[i] = f

I = np.mean(Z)
print(I)